#!/bin/sh
# demolinux build&run script
#  Usage: ./demolinux [run|clean|build|tests|all|flash|schemes]

A=( $@ )
elevate(){
	[ $(id -u) -ne 0 ] && exec sudo -E ./"$0" ${A[@]}
}

clean(){
	elevate
	pkill archiso
	mount | grep $PWD | cut -d\  -f3 | xargs -r umount -l
	umount -fl /mnt/demolinux/* 2>/dev/null
	losetup -d /dev/loop0 2>/dev/null
	rm -rf work/
}

ensure_installed(){
	[ -n "$CI" ] && return
	pacman -Q $(<build_packages) >/dev/null || {
		echo Missing packages to build. Installing...
		pacman -S --noconfirm $(<build_packages)
	}
}

rebuild_schemes(){
	XDG_CONFIG_HOME=$PWD without_root flavours -c flavours/flavours.conf apply ${1:-mellow-purple} ||\
		([ ! "$2" = second_try ] &&
			(echo Fetching schemes and templates...
			without_root flavours update all # >/dev/null 2>&1
			rebuild_schemes "$1" second_try))
}

build(){
	ensure_installed
	elevate
	./bin/mkarchiso -o out/ -w work/ .
}

run(){
	without_root ./bin/run_archiso -i out/$(ls -t out/ | head -1)
}

tests() {
	without_root ./tests/run
}

flash(){
	elevate
	device=${1:?Missing device}
	image=$(ls -t out/ | head -1)

	# ensure dd, head and md5sum are in
	# the kernel cache if we're overwritting
	# the device demolinux runs on
	( sync kci; dd -aaa; head -\; md5sum -. ) >/dev/null 2>&1

	size="$(stat -c %s out/"$image")"
	image_checksum="$(md5sum out/"$image" | cut -d\  -f1)"
	pv -Y out/"$image" > "$device"
	disk_checksum="$(dd if="$device" | head -c "$size" | md5sum | cut -d\  -f1)"

	if [ ! "$image_checksum" = "$disk_checksum" ]; then
		echo Checksum mismatch! expected $image_checksum got $disk_checksum
		echo Image has been incorrectly copied, retrying...
		"$0" flash "$@"
	fi
	sync; sync; sync # just to be sure
}

without_root(){
	if [ $(id -u) -ne 0 ]; then
		$@
	else
		su $SUDO_USER -pc "$*"
	fi
}

case $1 in
	run) run ;;
	clean) clean ;;
	build) clean; build ;;
	tests) tests ;;
	schemes) rebuild_schemes $2 ;;
	flash) flash $2 ;;
	all) clean; rebuild_schemes && build && run ;;
	*) sed -n '2,3s/# //p' "$0" ;;
esac
