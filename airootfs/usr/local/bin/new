#!/bin/sh

pname="$0"
error()
{
	echo "$pname: $*"
	exit 1
}

system_templates_dir=/usr/share/templates
user_templates_dir="${XDG_TEMPLATES_DIR:="$HOME/Templates"}"

template_name="$1"
destination_path="$2"

[ -e "$system_templates_dir" -o -e "$templates_dir" ] ||
	error neither directory exist: $system_templates_dir, $user_templates_dir
[ -e "$system_templates_dir" -a ! -d "$system_templates_dir" ] &&
	error not a directory: $system_templates_dir
[ -e "$user_templates_dir" -a ! -d "$user_templates_dir" ] &&
	error not a directory: $user_templates_dir

(( $# > 2 )) && error usage: $pname [template_name [destination_path]]

[ -e "$destination_path" ] && error destination path already exists: $destination_path

if [ -z "$template_name" ]; then
	out="$( (ls "$system_templates_dir"; ls "$user_templates_dir") | sort -u )"
	if [ -z "$out" ]; then
		echo no templates availables
	else
		echo available templates:
		echo "$out" | sed s/^/\ \ /
	fi
else
substitute()
{
	awk '
		{
			i = 1
			match($0, /{{ (.+) }}/, variables)
			while (variables[i])
			{
				variable = variables[i++]
				if (variable ~ /^shell /) {
					output = ""
					command = substr(variable, 6)
					while ((command | getline line) > 0)
						output = output line "\n"
					gsub(/{{ .+ }}/, substr(output, 1, length(output)-1))
				} else {
					printf variable ": " > "/dev/stderr"
					getline value < "/dev/tty"
					gsub(/{{ .+ }}/, value)
				}
			}
			print
		}
	' "$1"
}

	template="$user_templates_dir/$template_name"
	if [ ! -e "$template" ]; then
		template="$system_templates_dir/$template_name"
		if [ ! -e "$template" ]; then
			error no such template: $template_name
		fi
	fi
	: "${destination_path:="$template_name"}"
	if [ -d "$template" ]; then
		mkdir -p "$destination_path"
		while read -r file; do
			substitute "$file" > "$destination_path/$(basename "$file")"
		done < <(find "$template" -type f)
	else
		substitute "$template" > "$destination_path"
	fi
fi
