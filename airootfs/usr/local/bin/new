#!/bin/sh

pname="$0"
error()
{
	echo "$pname: $*"
	exit 1
}

system_templates_dir=/usr/share/templates
user_templates_dir="${XDG_TEMPLATES_DIR:="$HOME/templates"}"

template_name="$1"
destination_path="$2"

[ -e "$system_templates_dir" -o -e "$user_templates_dir" ] ||
	error neither directory exist: $system_templates_dir, $user_templates_dir
[ -e "$system_templates_dir" -a ! -d "$system_templates_dir" ] &&
	error not a directory: $system_templates_dir
[ -e "$user_templates_dir" -a ! -d "$user_templates_dir" ] &&
	error not a directory: $user_templates_dir

(( $# > 2 )) && error usage: $pname [template_name [destination_path]]

[ -e "$destination_path" ] && error destination path already exists: $destination_path

if [ -z "$template_name" ]; then
	out="$( (ls "$system_templates_dir"; ls "$user_templates_dir") | sort -u )"
	if [ -z "$out" ]; then
		echo no templates availables
	else
		echo available templates:
		echo "$out" | sed s/^/\ \ /
	fi
else
substitute()
{
	touch .awk_cache
	awk '
		@include ".awk_cache"
		{
			match($0, /{{ ([^}]+) }}/, variables)
			variable = variables[1]
			if (variable) {
				if (variable ~ /^shell /) {
					output = ""
					command = substr(variable, 6)
					while ((command | getline line) > 0)
						output = output line "\n"
					gsub(/{{ [^}]+ }}/, substr(output, 1, length(output)-1))
				} else {
					# yes thats ugly, but if its way too hard to 
					# parse the shell way of doing that
					if (variable ~ /^uppercase /) {
						uppercase = 1
						variable = substr(variable, 11)
					}
					if (!(variable in cache)) {
						printf "%s: ", variable > "/dev/stderr"
						getline value < "/dev/tty"
						cache[variable] = value
						printf "BEGIN {	cache[\"%s\"] = \"%s\" }\n", variable, value >> ".awk_cache"
					}
					value = cache[variable]
					if (uppercase)
						value = toupper(value)
					gsub(/{{ [^}]+ }}/, value)
				}
			}
			print
		}
	' "$1"
}

	template="$user_templates_dir/$template_name"
	if [ ! -e "$template" ]; then
		template="$system_templates_dir/$template_name"
		if [ ! -e "$template" ]; then
			error no such template: $template_name
		fi
	fi
	: "${destination_path:="$template_name"}"
	if [ -d "$template" ]; then
		mkdir -p "$destination_path"
		while read -r file; do
			mkdir -p "$(dirname "$destination_path"/"${file##"$template"}")"
			substitute "$file" > "$destination_path"/"${file##"$template"}"
		done < <(find "$template" -type f -not -path .git)
	else
		substitute "$template" > "$destination_path"
	fi
	rm -f .awk_cache

	if [ -e "$destination_path/init" ]; then
		pushd "$destination_path" >/dev/null
		chmod +x ./init && ./init
		rm -f ./init
		popd >/dev/null
	fi
fi
