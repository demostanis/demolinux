From 49fbffdbc57dcf3990ef21e37f05da74b0ded366 Mon Sep 17 00:00:00 2001
From: demostanis <demostanis@protonmail.com>
Date: Fri, 3 Jan 2025 03:22:46 +0100
Subject: [PATCH] Adapt to how demolinux works

---
 hooks/archiso   | 112 ++++++++++++++++++++++++++++++------------------
 install/archiso |   5 +++
 2 files changed, 75 insertions(+), 42 deletions(-)

diff --git a/hooks/archiso b/hooks/archiso
index d2c600e..34a8788 100644
--- a/hooks/archiso
+++ b/hooks/archiso
@@ -45,13 +45,13 @@ _mnt_dmsnapshot() {
 
 # args: source, newroot, mountpoint
 _mnt_overlayfs() {
-    local src="${1}"
-    local newroot="${2}"
-    local mnt="${3}"
-    mkdir -p "/run/archiso/cowspace/${cow_directory}/upperdir" "/run/archiso/cowspace/${cow_directory}/workdir"
+    local lowerdir="${1##lowerdir=}"
+    local upperdir="${2##upperdir=}"
+    local workdir="${3##workdir=}"
+    local mountpoint="${4##mountpoint=}"
     mount -t overlay -o \
-        "lowerdir=${src},upperdir=/run/archiso/cowspace/${cow_directory}/upperdir,workdir=/run/archiso/cowspace/${cow_directory}/workdir" \
-        airootfs "${newroot}${mnt}"
+        "lowerdir=${lowerdir},upperdir=${upperdir},workdir=${workdir},index=off,metacopy=off" \
+        airootfs "${mountpoint}"
 }
 
 # args: /path/to/image_file, mountpoint
@@ -66,17 +66,6 @@ _mnt_fs() {
     if [ "${copytoram}" = "y" ]; then
         msg -n ":: Copying rootfs image to RAM..."
 
-        # in case we have pv use it to display copy progress feedback otherwise
-        # fallback to using plain cp
-        if command -v pv >/dev/null 2>&1; then
-            echo ""
-            (pv "${img}" >"/run/archiso/copytoram/${img_fullname}")
-            local rc=$?
-        else
-            (cp -- "${img}" "/run/archiso/copytoram/${img_fullname}")
-            local rc=$?
-        fi
-
         if [ "$rc" != 0 ]; then
             echo "ERROR: while copy '${img}' to '/run/archiso/copytoram/${img_fullname}'"
             launch_interactive_shell
@@ -183,7 +172,7 @@ run_hook() {
     # shellcheck disable=SC2154
     # defined via initcpio's parse_cmdline()
     [ -z "${archisodevice}" ] && archisodevice="/dev/disk/by-label/${archisolabel}"
-    [ -z "${cow_spacesize}" ] && cow_spacesize="256M"
+    [ -z "${cow_spacesize}" ] && cow_spacesize="6G"
     # shellcheck disable=SC2154
     # defined via initcpio's parse_cmdline()
     if [ -n "${cow_label}" ]; then
@@ -210,22 +199,54 @@ archiso_mount_handler() {
     local newroot="${1}"
     local sigfile cms_sigfile fs_img fs_img_size iso_blockdev
 
-    if ! mountpoint -q "/run/archiso/bootmnt"; then
-        _mnt_dev "${archisodevice}" "/run/archiso/bootmnt" "-r" "defaults"
+    btrfs_root=/run/archiso/btrfs
+    _mnt_dev /dev/disk/by-partlabel/system $btrfs_root "-w" "subvol=system,compress=zstd"
+
+    # yes, this syntax is required...
+    if [ $(( $(btrfs subvol list $btrfs_root | wc -l) < 6 )) = 1 ]; then
+        plymouth update --status="Extending filesystems..."
+
+        # first, resize the filesystem
+        umount -f $btrfs_root
+        # then, resize the partition to fit the whole disk...
+        # TODO: multiple system partitions
+        disk=/dev/"$(lsblk -no pkname /dev/disk/by-partlabel/system)"
+        growpart "$disk" 3
+        partprobe "$disk"
+
+        plymouth update --status="Creating Btrfs subvolumes..."
+
+        _mnt_dev /dev/disk/by-partlabel/system $btrfs_root "-w" "subvol=system,compress=zstd"
+        btrfs filesystem resize max $btrfs_root
+
+        # finally, create the necessary subvolumes
+        btrfs subvol create $btrfs_root/persistfs
+        btrfs subvol create $btrfs_root/snapshots
+        btrfs subvol create $btrfs_root/data
+        btrfs subvol create $btrfs_root/swap
+        btrfs filesystem mkswapfile --size 4G --uuid clear $btrfs_root/swap/swapfile 2>/dev/null
     fi
 
-    # We need this block at the top for early failure
-    # but also to be able to give the fs_img to CMS verification.
-    # (sha512sum files contain the image, CMS files does not)
-    if [ -f "/run/archiso/bootmnt/${archisobasedir}/${arch}/airootfs.sfs" ]; then
-        fs_img="/run/archiso/bootmnt/${archisobasedir}/${arch}/airootfs.sfs"
-    elif [ -f "/run/archiso/bootmnt/${archisobasedir}/${arch}/airootfs.erofs" ]; then
-        fs_img="/run/archiso/bootmnt/${archisobasedir}/${arch}/airootfs.erofs"
-    else
-        echo "ERROR: no root file system image found"
-        launch_interactive_shell
+    if ! mountpoint -q "/run/archiso/bootmnt"; then
+        _mnt_dev /dev/disk/by-partlabel/boot "/run/archiso/bootmnt" "-r" "defaults"
     fi
 
+    plymouth update --status="Mouting filesystems..."
+    _mnt_dev /dev/disk/by-partlabel/system /run/archiso/persistfs "-w" "subvol=/system/persistfs,compress=zstd,noatime"
+    _mnt_dev /dev/disk/by-partlabel/system /run/archiso/snapshots "-w" "subvol=/system/snapshots,compress=zstd,noatime"
+    _mnt_dev /dev/disk/by-partlabel/system /run/archiso/data "-w" "subvol=/system/data,compress=zstd,noatime"
+    snapshot="${btrfs_snapshot##*/}"
+    snapshot="${snapshot:+snapshots/$snapshot}"
+    _mnt_dev /dev/disk/by-partlabel/system /run/archiso/airootfs "-r" "subvol=/system/${snapshot:-airootfs},compress=zstd,noatime"
+    _mnt_dev /dev/disk/by-partlabel/system /run/archiso/swap "-w" "subvol=/system/swap,compress=zstd,noatime"
+
+    for dir in /run/archiso/airootfs/etc/skel/*; do
+        if readlink "$dir" | grep -q '^/data'; then
+            mkdir -p /run/archiso/data/"$(basename "$(readlink "$dir")")"
+        fi
+    done
+    chown 1000:1000 /run/archiso/data /run/archiso/data/*
+
     # shellcheck disable=SC2154
     # defined via initcpio's parse_cmdline()
     if [ "${checksum}" = "y" ]; then
@@ -292,10 +313,10 @@ archiso_mount_handler() {
     # * the root file system image size is less than 4 GiB,
     # * the estimated available memory is more than the root file system image size + 2 GiB.
     if [ "${copytoram}" = "auto" ]; then
-        iso_blockdev="$(realpath "$(resolve_device "$archisodevice")")"
+        iso_blockdev="$(realpath "$(resolve_device /dev/disk/by-partlabel/system)")"
         if [ "$iso_blockdev" = "${iso_blockdev##/dev/sr}" ]; then
-            fs_img_size="$(du -bsk "$fs_img" | cut -f 1)"
-            if [ "$fs_img_size" -lt 4194304 ] && [ "$(awk '$1 == "MemAvailable:" { print $2 }' /proc/meminfo)" -gt $((fs_img_size + 2097152)) ]; then
+            fs_img_size="$(du -bsk "/run/archiso/airootfs" | cut -f 1)"
+            if [ "$(awk '$1 == "MemAvailable:" { print $2 }' /proc/meminfo)" -gt $((fs_img_size + 2097152)) ]; then
                 copytoram="y"
             fi
         fi
@@ -314,19 +335,26 @@ archiso_mount_handler() {
         msg ":: Mounting /run/archiso/cowspace (tmpfs) filesystem, size=${cow_spacesize}..."
         mount --mkdir -t tmpfs -o "size=${cow_spacesize}",mode=0755 cowspace /run/archiso/cowspace
     fi
-    mkdir -p "/run/archiso/cowspace/${cow_directory}"
-    chmod 0700 "/run/archiso/cowspace/${cow_directory}"
 
-    _mnt_fs "${fs_img}" "/run/archiso/airootfs"
     if [ -f "/run/archiso/airootfs/airootfs.img" ]; then
         _mnt_dmsnapshot "/run/archiso/airootfs/airootfs.img" "${newroot}" "/"
     else
-        _mnt_overlayfs "/run/archiso/airootfs" "${newroot}" "/"
-    fi
-
-    if [ "${copytoram}" = "y" ]; then
-        umount -d /run/archiso/bootmnt
-        rmdir /run/archiso/bootmnt
+        # why doesnt {cowspace,persistfs} work...
+        mkdir -p /run/archiso/cowspace/upperdir
+        mkdir -p /run/archiso/cowspace/workdir
+        mkdir -p /run/archiso/persistfs/upperdir
+        mkdir -p /run/archiso/persistfs/workdir
+        mkdir -p /run/archiso/cowspace/lowerdir
+
+	lowerdir=/run/archiso/airootfs
+	if [ "$copytoram" = y ]; then
+               plymouth update --status="Copying airootfs to RAM..."
+		cp -a /run/archiso/airootfs/* /run/archiso/copytoram
+		lowerdir=/run/archiso/copytoram
+	fi
+        _mnt_overlayfs lowerdir=$lowerdir upperdir=/run/archiso/persistfs/upperdir workdir=/run/archiso/persistfs/workdir mountpoint=/run/archiso/cowspace/lowerdir
+        _mnt_overlayfs lowerdir=/run/archiso/cowspace/lowerdir upperdir=/run/archiso/cowspace/upperdir workdir=/run/archiso/cowspace/workdir mountpoint="$newroot/"
+        umount $btrfs_root
     fi
 }
 
--- a/install/archiso
+++ b/install/archiso
@@ -7,6 +7,7 @@ build() {
     add_module "loop"
     add_module "dm-snapshot"
     add_module "overlay"
+    add_module "btrfs"
 
     add_runscript
 
@@ -14,6 +15,13 @@ build() {
     add_binary dmsetup
     add_binary losetup
     add_binary openssl
+    add_binary btrfs
+    add_binary plymouth
+    add_binary lsblk
+    add_binary growpart
+    # growpart deps
+    add_binary sgdisk
+    add_binary flock
 
     if command -v pv >/dev/null 2>&1; then
         add_binary pv
-- 
2.47.1

